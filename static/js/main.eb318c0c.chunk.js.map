{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","tabId","find","tab","id","className","map","href","onClick","e","preventDefault","title","content","App","useState","setTabId","setTitle","clickedTab","anotherTab","setAnotherTab","ReactDOM","render","document","getElementById"],"mappings":"iMAUaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAIMC,EAFUH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAGxCA,EACAD,EAAK,GAAGM,GAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWJ,IAAUE,EAAIC,GAAK,YAAc,GAC5C,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,SAACC,GACRA,EAAEC,iBACET,IAAUE,EAAIC,IAChBJ,EAAcG,IANpB,SAUGA,EAAIQ,SAZFR,EAAIC,WAmBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,YAD/B,aACG,EAAoCW,cC1ChCd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0BC,mBAAShB,EAAK,GAAGM,IAA3C,mBAAOH,EAAP,KAAcc,EAAd,KACA,EAA0BD,mBAAShB,EAAK,GAAGa,OAA3C,mBAAOA,EAAP,KAAcK,EAAd,KAeA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBM,KAGtB,cAAC,EAAD,CACEb,KAAMA,EACNE,cAZgB,SAACG,IATD,SAACc,GACrB,IAAMC,EAAapB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOa,EAAWb,MAEtDc,IACDH,EAASG,EAAWd,IACpBY,EAASE,EAAWP,QAKvBQ,CAAchB,IAYVJ,cAAeE,QCpCvBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eb318c0c.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '../typeTab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  onTabSelected:Function,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const findTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const tabId = findTab\n    ? selectedTabId\n    : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={tabId === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (tabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === tabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './components/typeTab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [tabId, setTabId] = useState(tabs[0].id);\n  const [title, setTitle] = useState(tabs[0].title);\n\n  const setAnotherTab = (clickedTab:Tab) => {\n    const anotherTab = tabs.find(tab => tab.id === clickedTab.id);\n\n    if (anotherTab) {\n      (setTabId(anotherTab.id));\n      (setTitle(anotherTab.title));\n    }\n  };\n\n  const onTabSelected = (tab:Tab) => {\n    setAnotherTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={tabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}